/*++

Module Name:

    public.h

Abstract:

    This module contains the common declarations shared by driver
    and user applications.

Environment:

    user and kernel

--*/

#ifndef _PUBLIC_H_
#define _PUBLIC_H_

#include <initguid.h>

//
// Define an Interface Guid so that app can find the device and talk to it.
//

DEFINE_GUID (GUID_DEVINTERFACE_KMDF_USB,
    0x1a3479c0,0x6130,0x47ce,0x8d,0xfc,0xc3,0x92,0x9c,0x3d,0x26,0x00);
// {1a3479c0-6130-47ce-8dfc-c3929c3d2600}

DEFINE_GUID(USB_BUS_INTERFACE_USBDI_GUID1,
	0xb1a96a13, 0x3de0, 0x4574, 0x9b, 0x1, 0xc0, 0x8f, 0xea, 0xb3, 0x18, 0xd6);
// {B1A96A13-3DE0-4574-9B01-C08FEAB318D6}

#pragma warning(push)
#pragma warning(disable:4201)  // nameless struct/union
#pragma warning(disable:4214)  // bit field types other than int

#define CHUNK_SIZE	64

typedef unsigned short  WORD;
typedef unsigned int	UINT;

// 应用程序用这个结构体传递upload请求给驱动
typedef struct {
	WORD  addr;// 其实地址
	WORD  len; // 缓冲长度
	//UCHAR data[1];// 缓冲区
}FIRMWARE_UPLOAD, *PFIRMWARE_UPLOAD;

// 取得string描述符
typedef struct _GET_STRING_DESCRIPTOR
{
	UCHAR    Index;
	USHORT   LanguageId;
} GET_STRING_DESCRIPTOR, *PGET_STRING_DESCRIPTOR;

// App通过这个结构体向驱动传递Set Feature命令。
typedef struct _SET_FEATURE_CONTROL
{
	USHORT FeatureSelector;
	USHORT Index;
	BOOLEAN bSetOrClear;// TRUE: Set; FALSE: Clear.
} SET_FEATURE_CONTROL, *PSET_FEATURE_CONTROL;

typedef enum {
	ENTERD0,
	EXITD0,
	SURPRISE_REMOVE,
	DRIVER_SYNC_EXIT,
	DRIVER_SYNC_OTHER
}DRIVER_SYNC_ORDER_TYPE;

// 同步信息数据结构
typedef struct {
	DRIVER_SYNC_ORDER_TYPE type; // 信息类型
	int info; // 信息内容
}DriverSyncPackt, *PDriverSyncPackt;

// 下面的三个结构用来获取驱动程序的版本信息
typedef enum {
	DR_WDF,
	DR_WDM
}DRIVER_TYPE;

typedef enum {
	FW_CY001,
	FW_NOT_CY001
}FIRMWARE_TYPE;

typedef struct {
	DRIVER_TYPE DriverType; // WDF or WDM
	FIRMWARE_TYPE FirmwareType;// USB or Firmware
}DRIVER_VERSION, *PDRIVER_VERSION;

// 特殊类/Vendor自定义请求控制块
typedef struct
{
	union {
		struct {
			UCHAR  recepient : 2;
			UCHAR  Reserved  : 3;
			UCHAR  Type		 : 2;
			UCHAR  bDirInput : 1;
		} Request;
		UCHAR  type;
	} type;

	UCHAR req;
	USHORT value;
	USHORT index;
	USHORT length;
	char   *buf;				// 长度由length决定
}USB_CTL_REQ, *PUSB_CTL_REQ;



#define IOCTL_INDEX_START   0x8000

#define IOCTL_USB_CTL_REQUEST CTL_CODE(FILE_DEVICE_UNKNOWN,\
	IOCTL_INDEX_START + 3,       \
	METHOD_BUFFERED,   \
	FILE_ANY_ACCESS)

#define IOCTL_FIRMWARE_UPLOAD CTL_CODE(FILE_DEVICE_UNKNOWN,\
	IOCTL_INDEX_START + 4,       \
	METHOD_BUFFERED,   \
	FILE_ANY_ACCESS)

#define IOCTL_FIRMWARE_UPLOAD_OFFSET CTL_CODE(FILE_DEVICE_UNKNOWN,\
	IOCTL_INDEX_START + 4,\
	METHOD_IN_DIRECT,\
	FILE_ANY_ACCESS)

#define IOCTL_FIRMWARE_READ_RAM CTL_CODE(FILE_DEVICE_UNKNOWN,\
	IOCTL_INDEX_START + 5,       \
	METHOD_BUFFERED,   \
	FILE_ANY_ACCESS)

#define IOCTL_USB_VENDOR_REQUEST CTL_CODE(FILE_DEVICE_UNKNOWN,\
	IOCTL_INDEX_START + 6,       \
	METHOD_BUFFERED,   \
	FILE_ANY_ACCESS)

#define IOCTL_USB_CLASS_REQUEST   CTL_CODE(FILE_DEVICE_UNKNOWN,  \
	IOCTL_INDEX_START+9,\
	METHOD_IN_DIRECT,  \
	FILE_ANY_ACCESS)

#define IOCTL_USB_GET_CURRENT_CONFIG CTL_CODE(FILE_DEVICE_UNKNOWN,\
	IOCTL_INDEX_START + 7,       \
	METHOD_BUFFERED,   \
	FILE_ANY_ACCESS)

#define IOCTL_USB_GET_CURRENT_FRAME_NUMBER CTL_CODE(FILE_DEVICE_UNKNOWN,\
	IOCTL_INDEX_START + 8,       \
	METHOD_BUFFERED,   \
	FILE_ANY_ACCESS)

#define IOCTL_USB_ABORTPIPE   CTL_CODE(FILE_DEVICE_UNKNOWN,  \
	IOCTL_INDEX_START+10,\
	METHOD_BUFFERED,  \
	FILE_ANY_ACCESS)

#define IOCTL_USB_GET_DEVICE_DESCRIPTOR   CTL_CODE(FILE_DEVICE_UNKNOWN,  \
	IOCTL_INDEX_START+11,\
	METHOD_BUFFERED,  \
	FILE_ANY_ACCESS)

#define IOCTL_USB_GET_STRING_DESCRIPTOR   CTL_CODE(FILE_DEVICE_UNKNOWN,  \
	IOCTL_INDEX_START+12,\
	METHOD_BUFFERED,  \
	FILE_ANY_ACCESS)

#define IOCTL_USB_GET_CONFIGURATION_DESCRIPTOR   CTL_CODE(FILE_DEVICE_UNKNOWN,  \
	IOCTL_INDEX_START+13,\
	METHOD_BUFFERED,  \
	FILE_ANY_ACCESS)

#define IOCTL_USB_SET_INTERFACE   CTL_CODE(FILE_DEVICE_UNKNOWN,  \
	IOCTL_INDEX_START+14,\
	METHOD_BUFFERED,  \
	FILE_ANY_ACCESS)

// 总线端口重置
#define IOCTL_USB_PORT_RESET   CTL_CODE(FILE_DEVICE_UNKNOWN,  \
	IOCTL_INDEX_START+15,\
	METHOD_NEITHER,  \
	FILE_ANY_ACCESS)

// USB芯片重置
#define IOCTL_USB_FIRMWRAE_RESET   CTL_CODE(FILE_DEVICE_UNKNOWN,  \
	IOCTL_INDEX_START+15,\
	METHOD_BUFFERED,  \
	FILE_ANY_ACCESS)

#define IOCTL_USB_BULK_WRITE   CTL_CODE(FILE_DEVICE_UNKNOWN,  \
	IOCTL_INDEX_START+16,\
	METHOD_IN_DIRECT,  \
	FILE_ANY_ACCESS)

#define IOCTL_USB_BULK_READ   CTL_CODE(FILE_DEVICE_UNKNOWN,  \
	IOCTL_INDEX_START+17,\
	METHOD_OUT_DIRECT,  \
	FILE_ANY_ACCESS)

#define IOCTL_USB_GET_LAST_ERROR   CTL_CODE(FILE_DEVICE_UNKNOWN,  \
	IOCTL_INDEX_START+18,\
	METHOD_BUFFERED,  \
	FILE_ANY_ACCESS)

#define IOCTL_USB_GET_PIPE_INFO   CTL_CODE(FILE_DEVICE_UNKNOWN,  \
	IOCTL_INDEX_START+19,\
	METHOD_BUFFERED,  \
	FILE_ANY_ACCESS)

#define IOCTL_USB_SET_CLEAR_FEATURE   CTL_CODE(FILE_DEVICE_UNKNOWN,  \
	IOCTL_INDEX_START+20,\
	METHOD_BUFFERED,  \
	FILE_ANY_ACCESS)

#define IOCTL_USB_PIPE_RESET	CTL_CODE(FILE_DEVICE_UNKNOWN,\
	IOCTL_INDEX_START+21,\
	METHOD_BUFFERED,\
	FILE_ANY_ACCESS)

#define IOCTL_USB_PIPE_ABORT	CTL_CODE(FILE_DEVICE_UNKNOWN,\
	IOCTL_INDEX_START+22,\
	METHOD_BUFFERED,\
	FILE_ANY_ACCESS)

#define IOCTL_USB_SET_DIGITRON	CTL_CODE(FILE_DEVICE_UNKNOWN,\
	IOCTL_INDEX_START+23,\
	METHOD_BUFFERED,\
	FILE_ANY_ACCESS)

#define IOCTL_USB_GET_DIGITRON	CTL_CODE(FILE_DEVICE_UNKNOWN,\
	IOCTL_INDEX_START+123,\
	METHOD_BUFFERED,\
	FILE_ANY_ACCESS)

#define IOCTL_USB_SET_LEDs	CTL_CODE(FILE_DEVICE_UNKNOWN,\
	IOCTL_INDEX_START+24,\
	METHOD_BUFFERED,\
	FILE_ANY_ACCESS)

#define IOCTL_USB_GET_LEDs	CTL_CODE(FILE_DEVICE_UNKNOWN,\
	IOCTL_INDEX_START+124,\
	METHOD_BUFFERED,\
	FILE_ANY_ACCESS)

// 通过Interrupt端口取得鼠标按键信息
#define IOCTL_INT_READ_KEYs	CTL_CODE(FILE_DEVICE_UNKNOWN,\
	IOCTL_INDEX_START+27,\
	METHOD_BUFFERED,\
	FILE_ANY_ACCESS)

// 开始通过Interrupt端口取得鼠标按键信息
#define IOCTL_START_INT_READ	CTL_CODE(FILE_DEVICE_UNKNOWN,\
	IOCTL_INDEX_START+28,\
	METHOD_BUFFERED,\
	FILE_ANY_ACCESS)

// 结束通过Interrupt端口取得鼠标按键信息
#define IOCTL_STOP_INT_READ	CTL_CODE(FILE_DEVICE_UNKNOWN,\
	IOCTL_INDEX_START+29,\
	METHOD_BUFFERED,\
	FILE_ANY_ACCESS)

#define IOCTL_GET_DRIVER_VERSION	CTL_CODE(FILE_DEVICE_UNKNOWN,\
	IOCTL_INDEX_START+26,\
	METHOD_BUFFERED,\
	FILE_ANY_ACCESS)

#define IOCTL_USB_SYNC     CTL_CODE(FILE_DEVICE_UNKNOWN,  \
	IOCTL_INDEX_START+100,\
	METHOD_IN_DIRECT,  \
	FILE_ANY_ACCESS)

#define IOCTL_USB_SYNC_RELEASE     CTL_CODE(FILE_DEVICE_UNKNOWN,  \
	IOCTL_INDEX_START+101,\
	METHOD_BUFFERED,  \
	FILE_ANY_ACCESS)

#define IOCTL_APP_EXIT_CANCEL      CTL_CODE(FILE_DEVICE_UNKNOWN,  \
	IOCTL_INDEX_START+102,\
	METHOD_BUFFERED,  \
	FILE_ANY_ACCESS)



#endif
